// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pieshop.Models;

namespace pieshop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200115022342_AddOrders")]
    partial class AddOrders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("pieshop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Fungus Pies",
                            Description = "All fungus-based pies"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Fruit Pies",
                            Description = "All pies made from alien fruits"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Bean Pies",
                            Description = "Pies with bean fillings"
                        });
                });

            modelBuilder.Entity("pieshop.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(25) CHARACTER SET utf8mb4")
                        .HasMaxLength(25);

                    b.Property<string>("State")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("pieshop.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PieId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PieId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("pieshop.Models.Pie", b =>
                {
                    b.Property<int>("PieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AllergyInformation")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("InStock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPieOfTheWeek")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LongDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PieId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Pies");

                    b.HasData(
                        new
                        {
                            PieId = 1,
                            AllergyInformation = "",
                            CategoryId = 1,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/brain.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "",
                            Name = "Brain Pie",
                            Price = 15.95m,
                            ShortDescription = "Made with false morel (Gyromitra esculenta)"
                        },
                        new
                        {
                            PieId = 2,
                            AllergyInformation = "",
                            CategoryId = 1,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/bleeding-tooth.jpg",
                            InStock = true,
                            IsPieOfTheWeek = true,
                            LongDescription = "",
                            Name = "Bleeding Tooth Pie",
                            Price = 16.00m,
                            ShortDescription = "Made with Hydnellum pecki"
                        },
                        new
                        {
                            PieId = 3,
                            AllergyInformation = "",
                            CategoryId = 1,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/glow.jpg",
                            InStock = true,
                            IsPieOfTheWeek = true,
                            LongDescription = "",
                            Name = "Glow Pie",
                            Price = 12.50m,
                            ShortDescription = "Made with bioluminiscent mushrooms"
                        },
                        new
                        {
                            PieId = 4,
                            AllergyInformation = "",
                            CategoryId = 2,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/pepino.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "",
                            Name = "Pepino Pie",
                            Price = 16.75m,
                            ShortDescription = "Made with Pepino Fruit from South America"
                        },
                        new
                        {
                            PieId = 5,
                            AllergyInformation = "",
                            CategoryId = 2,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/kumquat.jpg",
                            InStock = true,
                            IsPieOfTheWeek = true,
                            LongDescription = "",
                            Name = "Kumquat Pie",
                            Price = 14.25m,
                            ShortDescription = "Made with Kumquat Fruit from China"
                        },
                        new
                        {
                            PieId = 6,
                            AllergyInformation = "",
                            CategoryId = 2,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/kiwano.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "",
                            Name = "Kiwano Pie",
                            Price = 15.75m,
                            ShortDescription = "Made with Kiwano Fruit from South Africa"
                        },
                        new
                        {
                            PieId = 7,
                            AllergyInformation = "",
                            CategoryId = 3,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/bean.jpg",
                            InStock = true,
                            IsPieOfTheWeek = true,
                            LongDescription = "",
                            Name = "Navy Bean Pie",
                            Price = 13.99m,
                            ShortDescription = "With butter, chocolate, and vanilla"
                        },
                        new
                        {
                            PieId = 8,
                            AllergyInformation = "",
                            CategoryId = 3,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/red-bean.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "",
                            Name = "Sweet Red Bean Pie",
                            Price = 14.50m,
                            ShortDescription = "Made with read beans"
                        },
                        new
                        {
                            PieId = 9,
                            AllergyInformation = "",
                            CategoryId = 3,
                            ImageThumbnailUrl = "",
                            ImageUrl = "/images/edamame.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "",
                            Name = "Edamame Pie",
                            Price = 16.25m,
                            ShortDescription = "Made with edamame beans, mozarella, and zucchini"
                        });
                });

            modelBuilder.Entity("pieshop.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("PieId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("PieId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("pieshop.Models.OrderDetail", b =>
                {
                    b.HasOne("pieshop.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pieshop.Models.Pie", "Pie")
                        .WithMany()
                        .HasForeignKey("PieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pieshop.Models.Pie", b =>
                {
                    b.HasOne("pieshop.Models.Category", "Category")
                        .WithMany("Pies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pieshop.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("pieshop.Models.Pie", "Pie")
                        .WithMany()
                        .HasForeignKey("PieId");
                });
#pragma warning restore 612, 618
        }
    }
}
